Предоставьте ваш Python-скрипт вместе с кратким отчетом (не более 1 страницы), который включает следующее: URL сайта. Укажите URL сайта, который вы выбрали для анализа. Описание. Предоставьте краткое описание информации, которую вы хотели извлечь из сайта. Подход. Объясните подход, который вы использовали для навигации по сайту, определения соответствующих элементов и извлечения нужных данных. Трудности. Опишите все проблемы и препятствия, с которыми вы столкнулись в ходе реализации проекта, и как вы их преодолели. Результаты. Включите образец извлеченных данных в выбранном вами структурированном формате (например, CSV или JSON). Примечание: Обязательно соблюдайте условия обслуживания сайта и избегайте чрезмерного скрейпинга, который может нарушить нормальную работу сайта.

url = https://mybook.ru/tags/russkaya-fantastika/

Например, мы ищем начинающих русских авторов, пишущих в жанре фантастики. Хотим предложить им напечатать их в сборнике, подержку и т.д.
На этом сайте с помощью selenium мы будем сразу открывать раздел русской фантастики. Предполагаем, что начинающие авторы не имеют возможности записать аудиокниги и предлагают свои работы почитать бесплатно. Это и реализуем в скрипте: переходим на сайт и нажимаем соответствующие кнопки. Далее нам нужно открыть страницу полностью, чтобы найти все книги, для этого скрипт наживает кнопку "показать еще" пока это возможно. После этого со всех книг собираются их ссылки для открытия и скрейпинга. Далее с помощью BeautifulSoup открываем все ссылки по одной и скрейпим нужную информацию.

Трудности: в условиях медленного интернета и задержках для скрейпинга долго дожидаться результата и потом обработать ошибки.

Результат в файле = books_from_mybook.json
